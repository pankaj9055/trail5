@tailwind base;
@tailwind components;
@tailwind utilities;

:root {
  --background: hsl(0, 0%, 0%);
  --foreground: hsl(0, 0%, 100%);
  --muted: hsl(0, 0%, 10%);
  --muted-foreground: hsl(0, 0%, 60%);
  --popover: hsl(0, 0%, 5%);
  --popover-foreground: hsl(0, 0%, 100%);
  --card: hsl(0, 0%, 5%);
  --card-foreground: hsl(0, 0%, 100%);
  --border: hsl(0, 14%, 20%);
  --input: hsl(0, 14%, 20%);
  --primary: hsl(0, 72%, 51%);
  --primary-foreground: hsl(0, 0%, 100%);
  --secondary: hsl(0, 0%, 10%);
  --secondary-foreground: hsl(0, 0%, 100%);
  --accent: hsl(0, 0%, 10%);
  --accent-foreground: hsl(0, 0%, 100%);
  --destructive: hsl(0, 84%, 60%);
  --destructive-foreground: hsl(0, 0%, 100%);
  --ring: hsl(0, 72%, 51%);
  --radius: 0.5rem;
  
  /* Custom neon colors */
  --deep-red: hsl(0, 72%, 51%);
  --darker-red: hsl(0, 72%, 35%);
  --neon-cyan: hsl(180, 100%, 50%);
  --neon-blue: hsl(210, 100%, 50%);
  --neon-green: hsl(120, 100%, 50%);
  --neon-pink: hsl(328, 100%, 50%);
  --neon-yellow: hsl(60, 100%, 50%);
  --neon-purple: hsl(270, 100%, 50%);
  --neon-orange: hsl(30, 100%, 50%);
  --electric-blue: hsl(195, 100%, 50%);
  --bright-magenta: hsl(300, 100%, 50%);
  --lime-green: hsl(75, 100%, 50%);
}

.dark {
  --background: hsl(0, 0%, 0%);
  --foreground: hsl(0, 0%, 100%);
  --muted: hsl(0, 0%, 10%);
  --muted-foreground: hsl(0, 0%, 60%);
  --popover: hsl(0, 0%, 5%);
  --popover-foreground: hsl(0, 0%, 100%);
  --card: hsl(0, 0%, 5%);
  --card-foreground: hsl(0, 0%, 100%);
  --border: hsl(0, 14%, 20%);
  --input: hsl(0, 14%, 20%);
  --primary: hsl(0, 72%, 51%);
  --primary-foreground: hsl(0, 0%, 100%);
  --secondary: hsl(0, 0%, 10%);
  --secondary-foreground: hsl(0, 0%, 100%);
  --accent: hsl(0, 0%, 10%);
  --accent-foreground: hsl(0, 0%, 100%);
  --destructive: hsl(0, 84%, 60%);
  --destructive-foreground: hsl(0, 0%, 100%);
  --ring: hsl(0, 72%, 51%);
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply font-sans antialiased bg-background text-foreground;
    background: linear-gradient(135deg, hsl(0, 0%, 4%) 0%, hsl(0, 0%, 10%) 100%);
    overflow-x: hidden;
  }
}

@layer utilities {
  .deep-red {
    color: var(--deep-red);
  }
  
  .neon-cyan {
    color: var(--neon-cyan);
  }
  
  .neon-blue {
    color: var(--neon-blue);
  }
  
  .neon-green {
    color: var(--neon-green);
  }
  
  .neon-pink {
    color: var(--neon-pink);
  }
  
  .neon-yellow {
    color: var(--neon-yellow);
  }
  
  .neon-purple {
    color: var(--neon-purple);
  }
  
  .neon-orange {
    color: var(--neon-orange);
  }
  
  .electric-blue {
    color: var(--electric-blue);
  }
  
  .bright-magenta {
    color: var(--bright-magenta);
  }
  
  .lime-green {
    color: var(--lime-green);
  }
  
  .glow-red {
    box-shadow: 0 0 20px var(--deep-red);
  }
  
  .glow-cyan {
    box-shadow: 0 0 20px var(--neon-cyan);
  }
  
  .glow-blue {
    box-shadow: 0 0 20px var(--neon-blue);
  }
  
  .glow-green {
    box-shadow: 0 0 20px var(--neon-green);
  }
  
  .glow-pink {
    box-shadow: 0 0 20px var(--neon-pink);
  }
  
  .glow-yellow {
    box-shadow: 0 0 20px var(--neon-yellow);
  }
  
  .animate-spin-slow {
    animation: spin 20s linear infinite;
  }
  
  .animate-float {
    animation: float 6s ease-in-out infinite;
  }
  
  .animate-pulse-glow {
    animation: pulse-glow 2s ease-in-out infinite alternate;
  }
  
  .animate-slide-up {
    animation: slide-up 2s ease-out;
  }
  
  .animate-code-flow {
    animation: code-flow 15s linear infinite;
  }
  
  .animate-particle-float {
    animation: particle-float 8s ease-in-out infinite;
  }
  
  .animate-electric-wave {
    animation: electric-wave 0.5s ease-in-out;
  }
  
  .glow-border {
    position: relative;
    border: 2px solid transparent;
    background: linear-gradient(135deg, rgba(220, 38, 38, 0.1), rgba(0, 255, 255, 0.1));
    border-radius: 15px;
  }
  
  .glow-border::before {
    content: '';
    position: absolute;
    top: -2px;
    left: -2px;
    right: -2px;
    bottom: -2px;
    background: linear-gradient(45deg, var(--deep-red), var(--neon-cyan), var(--neon-green), var(--neon-pink), var(--neon-yellow), var(--deep-red));
    border-radius: 15px;
    z-index: -1;
    opacity: 0.7;
    animation: spin 3s linear infinite;
  }
  
  .perspective-1000 {
    perspective: 1000px;
  }
  
  .transform-3d {
    transform-style: preserve-3d;
  }
  
  .cube-container {
    animation: rotateCube 20s infinite linear;
  }
  
  .animate-spin-fast {
    animation: rotateCube 8s infinite linear;
  }

  @keyframes starBurst {
    0% {
      transform: scale(0) rotate(0deg);
      opacity: 1;
    }
    50% {
      transform: scale(1.5) rotate(180deg);
      opacity: 0.8;
    }
    100% {
      transform: scale(2) rotate(360deg);
      opacity: 0;
    }
  }

  .animate-star-burst {
    animation: starBurst 2s ease-out forwards;
  }
  
  .cube-face {
    position: absolute;
    width: 256px;
    height: 256px;
    border: 2px solid rgba(220, 38, 38, 0.3);
    display: flex;
    align-items: center;
    justify-content: center;
    backdrop-filter: blur(5px);
    transition: all 0.3s ease;
  }
  
  .cube-content {
    display: flex;
    align-items: center;
    justify-content: center;
  }
  
  .cube-front {
    transform: rotateY(0deg) translateZ(128px);
  }
  
  .cube-back {
    transform: rotateY(180deg) translateZ(128px);
  }
  
  .cube-right {
    transform: rotateY(90deg) translateZ(128px);
  }
  
  .cube-left {
    transform: rotateY(-90deg) translateZ(128px);
  }
  
  .cube-top {
    transform: rotateX(90deg) translateZ(128px);
  }
  
  .cube-bottom {
    transform: rotateX(-90deg) translateZ(128px);
  }
  
  .cube-face:hover {
    border-color: rgba(0, 255, 255, 0.6);
    box-shadow: 0 0 20px rgba(0, 255, 255, 0.3);
  }
  
  .skill-bar {
    position: relative;
    height: 8px;
    background: rgba(220, 38, 38, 0.1);
    border-radius: 10px;
    overflow: hidden;
  }
  
  .skill-fill {
    height: 100%;
    background: linear-gradient(90deg, var(--deep-red), var(--neon-cyan), var(--neon-purple));
    border-radius: 10px;
    box-shadow: 0 0 20px rgba(0, 255, 255, 0.5);
    transition: width 2s ease-out;
    position: relative;
  }
  
  .skill-fill::after {
    content: '';
    position: absolute;
    top: 0;
    left: 0;
    right: 0;
    bottom: 0;
    background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.3), transparent);
    animation: shimmer 2s infinite;
    border-radius: 10px;
  }
  
  .matrix-bg {
    position: fixed;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    background: 
      radial-gradient(circle at 20% 20%, rgba(220, 38, 38, 0.1) 0%, transparent 50%),
      radial-gradient(circle at 80% 80%, rgba(0, 255, 255, 0.1) 0%, transparent 50%),
      radial-gradient(circle at 40% 60%, rgba(0, 255, 0, 0.1) 0%, transparent 50%);
    z-index: 0;
  }
}

@keyframes pulse-glow {
  0% { box-shadow: 0 0 20px currentColor; }
  100% { box-shadow: 0 0 40px currentColor, 0 0 60px currentColor; }
}

@keyframes float {
  0%, 100% { transform: translateY(0px); }
  50% { transform: translateY(-20px); }
}

@keyframes slide-up {
  0% { transform: translateY(100px); opacity: 0; }
  100% { transform: translateY(0); opacity: 1; }
}

@keyframes code-flow {
  0% { transform: translateY(100%); }
  100% { transform: translateY(-100%); }
}

@keyframes particle-float {
  0%, 100% { transform: translate(0, 0); }
  25% { transform: translate(10px, -10px); }
  50% { transform: translate(-5px, -20px); }
  75% { transform: translate(-10px, -10px); }
}

@keyframes electric-wave {
  0% { transform: scale(1); text-shadow: 0 0 10px currentColor; }
  50% { transform: scale(1.05); text-shadow: 0 0 20px currentColor, 0 0 30px currentColor; }
  100% { transform: scale(1); text-shadow: 0 0 10px currentColor; }
}

@keyframes countUp {
  from { opacity: 0; transform: translateY(20px); }
  to { opacity: 1; transform: translateY(0); }
}

@keyframes shimmer {
  0% { transform: translateX(-100%); }
  100% { transform: translateX(100%); }
}

@keyframes rotateCube {
  0% { transform: rotateX(0deg) rotateY(0deg); }
  25% { transform: rotateX(90deg) rotateY(90deg); }
  50% { transform: rotateX(180deg) rotateY(180deg); }
  75% { transform: rotateX(270deg) rotateY(270deg); }
  100% { transform: rotateX(360deg) rotateY(360deg); }
}

.count-up {
  animation: countUp 2s ease-out forwards;
}
